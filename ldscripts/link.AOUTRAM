/* link.AOUTRAM - gnu linker command file for VxWorks: AOUT RAM */

/* Copyright 1984-2001 Wind River Systems, Inc. */

/* This file was automatically generated using tool/common/ldscripts. */

/*
modification history
--------------------
01r,25aug05,dlk  Support .text.init, .text.fast, .data.init, .data.fast.
01r,29jul05,slk  SPR 104264: fix MIPS romResident images
01q,06may05,rlg  changes for MIPS specific devices
01p,03jul04,f_b  Improved support for data alignment
01o,12dec03,sn   added more .rodata.str1.* handlers
01n,04dec03,sn   Diab: .rodata.* is not handled correctly by Diab linker; instead
		 use specific names
01m,28oct03,sn   Diab: collapse .rodata.cst* sections into .rodata
01l,29may02,tpw  Diab: pad out sections, needed for MIPS byteswap. SPR 78076
01k,24apr02,sn   GNU: SPR 75835 - added support for relocatable script link.OUT
01j,19apr02,tpw  Diab: provide _etext for ColdFire. SPR 75122
01i,06feb02,sn   Both: place .got2 to handle tramp.o (_x_gnu_tramp.o).
01h,25jan02,tpw  GNU: give debug sections explicit 0 addresses.
01g,14jan02,tpw  Diab: place .eh_frame data, in case of insistent GNU objects.
01f,14dec01,tpw  Diab: provide both underscore options of wrs_kernel* here too.
01e,05dec01,tpw  Both: Add .boot and .reset section support, for PPC 4xx series
                 and Book E.
01d,05dec01,tpw  Diab: Add .frame_info section to text region.
01c,03dec01,jab  Diab: replaced LOAD() with AT()
01b,14nov01,tpw  ALL: Correct some more bootrom/kernel issues.
01b,06nov01,tpw  GNU: Add /DISCARD/ directive to discard uninteresting sections
01a,01nov01,tpw  gnu script written
01a,29oct01,jab  diab script written
*/

ENTRY(_start)
SECTIONS
{
  .text      :
  {
    wrs_kernel_text_start = .; _wrs_kernel_text_start = .;
    _VX_START_TEXT = .;
    *(.text)
    wrs_kernel_text_fast = .; _wrs_kernel_text_fast = .;
    *(.text.fast)
    wrs_kernel_text_init = .; _wrs_kernel_text_init = .;
    *(.text.init)
    *(.text.*) *(.stub) *(.gnu.warning) *(.gnu.linkonce.t*)
    KEEP(*(.init)) KEEP(*(.fini))
    *(.glue_7t) *(.glue_7) *(.rdata)			/* for ARM */
    *(.mips16.fn.*) *(.mips16.call.*) *(.reginfo)	/* for MIPS */
    *(.rodata) *(.rodata.*) *(.gnu.linkonce.r*) *(.rodata1)
    *(.sdata2) *(.sbss2)				/* for PPC */
    . = ALIGN(16);
  }
  . = ALIGN(16);
  wrs_kernel_text_end = .; _wrs_kernel_text_end = .;
  etext = .; _etext = .;
  . = ALIGN(_VX_DATA_ALIGN);
  .data    :
  {
    wrs_kernel_data_start = .; _wrs_kernel_data_start = .;
    _VX_START_DATA = .;
    *(.data)
    wrs_kernel_data_fast = .; _wrs_kernel_data_fast = .;
    *(.data.fast)
    wrs_kernel_data_init = .; _wrs_kernel_data_init = .;
    *(.data.init)
    *(.data.*) *(.gnu.linkonce.d*) SORT(CONSTRUCTORS) *(.data1)
    *(.eh_frame) *(.gcc_except_table)
    KEEP (*crtbegin.o(.ctors))
    KEEP (*(EXCLUDE_FILE (*crtend.o) .ctors))
    KEEP (*(SORT(.ctors.*)))
    KEEP (*(.ctors))
    KEEP (*crtbegin.o(.dtors))
    KEEP (*(EXCLUDE_FILE (*crtend.o) .dtors))
    KEEP (*(SORT(.dtors.*)))
    KEEP (*(.dtors))
    _gp = ALIGN(16) + 0x7ff0;		/* set gp for MIPS startup code */
    /* got*, dynamic, sdata*, lit[48], and sbss should follow _gp */
    *(.got.plt) *(.got) *(.dynamic)
    *(.got2)
    *(.sdata) *(.sdata.*) *(.lit8) *(.lit4)
    . = ALIGN(16);
  }
  . = ALIGN(16);
  edata = .; _edata = .;
  wrs_kernel_data_end = .; _wrs_kernel_data_end = .;
  .bss       :
  {
    wrs_kernel_bss_start = .; _wrs_kernel_bss_start = .;
    *(.sbss) *(.scommon) *(.dynbss) *(.bss) *(COMMON)
    . = ALIGN(16);
  }
  . = ALIGN(16);
  end = .; _end = .;
  wrs_kernel_bss_end = .; _wrs_kernel_bss_end = .;

  /DISCARD/ :
  {
  *(.note)				/* seen on Pentium ELF */
  *(.comment)				/* seen on PPC & SH ELF */
  *(.pdr)				/* seen on MIPS ELF */
  }
}
